//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientExample.ServerSample {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContractDto", Namespace="http://schemas.datacontract.org/2004/07/ServerExample.Dto")]
    [System.SerializableAttribute()]
    public partial class ContractDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContractIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContractId {
            get {
                return this.ContractIdField;
            }
            set {
                if ((this.ContractIdField.Equals(value) != true)) {
                    this.ContractIdField = value;
                    this.RaisePropertyChanged("ContractId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActual {
            get {
                return this.IsActualField;
            }
            set {
                if ((this.IsActualField.Equals(value) != true)) {
                    this.IsActualField = value;
                    this.RaisePropertyChanged("IsActual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateDate {
            get {
                return this.UpdateDateField;
            }
            set {
                if ((this.UpdateDateField.Equals(value) != true)) {
                    this.UpdateDateField = value;
                    this.RaisePropertyChanged("UpdateDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServerSample.IGetDataService")]
    public interface IGetDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetDataService/GetContracts", ReplyAction="http://tempuri.org/IGetDataService/GetContractsResponse")]
        ClientExample.ServerSample.ContractDto[] GetContracts();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGetDataService/GetContracts", ReplyAction="http://tempuri.org/IGetDataService/GetContractsResponse")]
        System.IAsyncResult BeginGetContracts(System.AsyncCallback callback, object asyncState);
        
        ClientExample.ServerSample.ContractDto[] EndGetContracts(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGetDataServiceChannel : ClientExample.ServerSample.IGetDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetContractsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetContractsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ClientExample.ServerSample.ContractDto[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ClientExample.ServerSample.ContractDto[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataServiceClient : System.ServiceModel.ClientBase<ClientExample.ServerSample.IGetDataService>, ClientExample.ServerSample.IGetDataService {
        
        private BeginOperationDelegate onBeginGetContractsDelegate;
        
        private EndOperationDelegate onEndGetContractsDelegate;
        
        private System.Threading.SendOrPostCallback onGetContractsCompletedDelegate;
        
        public GetDataServiceClient() {
        }
        
        public GetDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GetDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetContractsCompletedEventArgs> GetContractsCompleted;
        
        public ClientExample.ServerSample.ContractDto[] GetContracts() {
            return base.Channel.GetContracts();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetContracts(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetContracts(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ClientExample.ServerSample.ContractDto[] EndGetContracts(System.IAsyncResult result) {
            return base.Channel.EndGetContracts(result);
        }
        
        private System.IAsyncResult OnBeginGetContracts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetContracts(callback, asyncState);
        }
        
        private object[] OnEndGetContracts(System.IAsyncResult result) {
            ClientExample.ServerSample.ContractDto[] retVal = this.EndGetContracts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetContractsCompleted(object state) {
            if ((this.GetContractsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetContractsCompleted(this, new GetContractsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetContractsAsync() {
            this.GetContractsAsync(null);
        }
        
        public void GetContractsAsync(object userState) {
            if ((this.onBeginGetContractsDelegate == null)) {
                this.onBeginGetContractsDelegate = new BeginOperationDelegate(this.OnBeginGetContracts);
            }
            if ((this.onEndGetContractsDelegate == null)) {
                this.onEndGetContractsDelegate = new EndOperationDelegate(this.OnEndGetContracts);
            }
            if ((this.onGetContractsCompletedDelegate == null)) {
                this.onGetContractsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetContractsCompleted);
            }
            base.InvokeAsync(this.onBeginGetContractsDelegate, null, this.onEndGetContractsDelegate, this.onGetContractsCompletedDelegate, userState);
        }
    }
}
